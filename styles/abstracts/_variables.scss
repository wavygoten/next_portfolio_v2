/// Main brand color
/// @type Color
$brand-color: rgb(229, 0, 80) !default;

/// Light grey
/// @type Color
$light-grey: rgb(237, 237, 237) !default;

/// Medium grey
/// @type Color
$mid-grey: rgb(153, 153, 153) !default;

/// Dark grey
/// @type Color
$dark-grey: rgb(68, 68, 68) !default;

$hover-dark: #292929 !default;

$hover-light: #acacac !default;
/// Container's maximum width
/// @type Length
$max-width: 1536px !default;

/// Theme map
/// @prop {String} keys - Keys are identifiers mapped to a given color
/// @prop {Map} values - Values are actual color properties
$theme: (
	"borderDark": rgb(47, 90, 139),
	"borderLight": rgb(58, 110, 170),
	"bgLight": #f2f2f2,
	"bgDark": #131313,
	"textLight": #000,
	"textDark": #fff,
	"light": #fff,
	"dark": #000,
	"secondaryDark": #111,
	"secondaryLight": #f1f1f1,
) !default;

/// Breakpoints map
/// @prop {String} keys - Keys are identifiers mapped to a given length
/// @prop {Map} values - Values are actual breakpoints expressed in pixels
$breakpoints: (
	"small": 768px,
	"medium": 1024px,
	"large": 1536px,
) !default;

/// Relative or absolute URL where all assets are served from
/// @type String
/// @example scss - When using a CDN
///   $base-url: 'https://cdn.example.com/assets/';
$base-url: "/assets/" !default;

/// Z-indexes map, gathering all Z layers of the application
/// @access private
/// @type Map
/// @prop {String} key - Layerâ€™s name
/// @prop {Number} value - Z value mapped to the key
$z-indexes: (
	"modal": 5000,
	"dropdown": 4000,
	"default": 1,
	"below": -1,
);
